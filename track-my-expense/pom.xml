<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.dsk.trackmyexpense</groupId>
  <artifactId>track-my-expense</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>track-my-expense Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <!-- Shared Version Numbers -->
  <properties>
  	<org.springframework.version>4.3.0.RELEASE</org.springframework.version>
  	<servlet-api-version>3.1.0</servlet-api-version>
  	<spring-data-jpa-version>1.10.1.RELEASE</spring-data-jpa-version>
  	<thymeleaf.version>3.0.0.RELEASE</thymeleaf.version>
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <!-- Servlet API -->
    <dependency>
	  <groupId>javax.servlet</groupId>
	  <artifactId>javax.servlet-api</artifactId>
      <version>${servlet-api-version}</version>
	</dependency>
	
    <!-- Core utilities used by other modules. Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-core</artifactId>
	  <version>${org.springframework.version}</version>
	</dependency>
	<!--
    	Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
    	Define this if you use Spring Transactions or DAO Exception Hierarchy
    	(org.springframework.transaction.*/org.springframework.dao.*)
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-tx</artifactId>
	  <version>${org.springframework.version}</version>
	</dependency>
	<!--
    	Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
    	Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
	-->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-webmvc</artifactId>
	  <version>${org.springframework.version}</version>
	</dependency>
	<!-- Spring Data JPA -->
	<dependency>
    	<groupId>org.springframework.data</groupId>
    	<artifactId>spring-data-jpa</artifactId>
    	<version>${spring-data-jpa-version}</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/org.eclipse.persistence/eclipselink -->
	<dependency>
	    <groupId>org.eclipse.persistence</groupId>
	    <artifactId>eclipselink</artifactId>
	    <version>2.6.3</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/ojdbc/ojdbc -->
	<!-- <dependency>
		<groupId>ojdbc</groupId>
		<artifactId>ojdbc</artifactId>
		<version>14</version>
	</dependency> -->
	
	<!-- To get Thymeleaf 3 (core): -->
	<dependency>
	  <groupId>org.thymeleaf</groupId>
	  <artifactId>thymeleaf</artifactId>
	  <version>${thymeleaf.version}</version>
	</dependency>
	<!-- Thymeleaf Spring 4 integration package -->
	<dependency>
	    <groupId>org.thymeleaf</groupId>
	    <artifactId>thymeleaf-spring4</artifactId>
	    <version>${thymeleaf.version}</version>
	</dependency>
	
  </dependencies>
  <build>
    <finalName>track-my-expense</finalName>
    <plugins>
  		<plugin>
  			<groupId>org.apache.maven.plugins</groupId>
      		<artifactId>maven-compiler-plugin</artifactId>
      		<configuration>
      			<source>1.8</source>
        		<target>1.8</target>
      		</configuration>
  		</plugin>
  	</plugins>
  	<!-- 
  		Specify the resources directory. By default, Maven will look for your project's resources under src/main/resources.
  		However, all your resources may not be in src/main/resources. Thus, you'd have to specify those directories by adding the following to your POM.
  	 -->
  	<resources>
  		<resource>
  			<directory>src/main/resources</directory>
  		</resource>
  	</resources>
  </build>
</project>
